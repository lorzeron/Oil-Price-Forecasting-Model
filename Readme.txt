#Описание программы и ее логики

1. Загрузка и предобработка данных
Назначение: Загрузка данных из двух файлов: BrentOilPrices.csv (содержит данные о ценах на нефть) и news.csv (содержит данные новостей с текстами).

Шаги:
Изменяется название столбца Data на date в датасете BrentOilPrices для унификации.
Все названия колонок приводятся к нижнему регистру.
Столбцы date в обоих датасетах преобразуются в формат datetime.
Из столбца date удаляется время, оставляя только дату для успешного объединения данных.
Удаляются строки с некорректными датами.

2. Нормализация цен на нефть
Назначение: Приведение данных о ценах на нефть в диапазон [0, 1] для улучшения обучения модели.
Метод: Используется MinMaxScaler из библиотеки sklearn.

3. Анализ тональности новостей
Назначение: Преобразование текстов новостей в числовую метрику, отражающую их эмоциональную окраску (тональность).
Метод: Используется библиотека VADER (NLP-анализатор), которая вычисляет значение compound для каждого текста.

4. Фильтрация данных по общему диапазону дат
Назначение: Ограничение данных только общим временным диапазоном между датасетами.

Шаги:
Вычисляются минимальные и максимальные даты для обоих датасетов.
Данные фильтруются по общему временному диапазону.

5. Объединение данных
Назначение: Объединение двух датасетов на основе общего столбца date.
Метод: Используется метод merge из pandas с типом объединения inner (только совпадающие даты).

6. Подготовка данных для модели LSTM
Назначение: Преобразование данных в формат временных последовательностей для обучения модели.

Шаги:
Из объединенного датасета извлекаются данные о ценах (price) и тональности (sentiment).
Создаются последовательности длиной sequence_length (например, 30 дней), где каждая последовательность включает в себя цены и тональности за предыдущие дни.
Формируется целевая переменная (Y) — это цена на следующий день.

7. Реализация метода Walk-Forward Validation
Назначение: Оценка модели на нескольких тестовых выборках с постепенным увеличением обучающей выборки.

Шаги:
Данные делятся на 5 фолдов (разбиений).
Для каждого фолда модель обучается на первых n данных и тестируется на следующих данных.
Для каждого разбиения вычисляется MAE (Mean Absolute Error).

8. Построение модели LSTM
Архитектура модели:
Входной слой: Два входных параметра (цена и тональность).
Два слоя LSTM: Первый с return_sequences=True (возвращает последовательности), второй — без.
Dropout-слои: Используются для предотвращения переобучения.
Полносвязный слой: Генерирует предсказание (цена на следующий день).
Параметры: Оптимизатор adam, функция потерь mean_squared_error.

9. Обучение модели
Процесс:
Модель обучается на обучающих данных с использованием 5 эпох и пакетов по 32 примера.
Проводится валидация на части обучающего набора (20%).

10. Оценка и визуализация результатов
Оценка:
Для каждого фолда вычисляется MAE на тестовом наборе.
Выводится средняя ошибка по всем фолдам.

Визуализация:
График True vs Predicted Prices для последнего фолда.
График Training and Validation Loss, показывающий динамику ошибки на обучении и валидации.

Итоги
Программа демонстрирует, как данные новостей (их тональность) и исторические цены на нефть могут быть объединены и использованы для предсказания будущих цен с помощью модели LSTM. Она включает полную предобработку данных, обучение модели и оценку ее качества с использованием метода Walk-Forward Validation.

